package controller.ui.matchsettings;

import javafx.scene.control.TextArea;
import java.util.Optional;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.CheckBox;
import javafx.scene.control.ChoiceBox;
import model.enums.SceneName;
import model.enums.DialogType;
import model.enums.GameMode;
import model.enums.PlayerType;
import model.match.MatchManager;
import model.match.MatchManagerImpl;
import view.dialog.DialogBuilder;
import view.dialog.DialogBuilderimpl;
import view.scene.SceneManager;


/**
 *  The Controller related to the matchSettings.fxml GUI.
 *
 */
public final class MatchSettings {

    private final DialogBuilder dialog = new DialogBuilderimpl();
    private final Login login = new Login(dialog);
    private final Initializer initializer = new Initializer(this, login);
    private GameMode selectedGameMode = GameMode.CLASSIC;

    @FXML
    private Button buttonBack, buttonStart;
    @FXML
    private ChoiceBox<String> choiceboxPlayer1, choiceboxPlayer2;
    @FXML
    private ChoiceBox<GameMode> choiceboxGameMode;
    @FXML
    private CheckBox checkboxAI;
    @FXML
    private TextArea textareaDescription;

    /**
     * this method is called automatically when loading the fxml layout. It sets the initial state of the UI
     */
    public void initialize() {
        initializer.initChoiceBoxes();
    }

    /**
     *  The handler for the click events generated by the button.
     */
    @FXML
    public void buttonStart() {
        startMatch();
    }

    /**
     *  The handler for the click events generated by the checkbox.
     */
    @FXML
    public void checkboxAI() {
        choiceboxPlayer2.setDisable(!choiceboxPlayer2.isDisabled());
    }

    /**
     *  The handler for the click events generated by the button.
     */
    @FXML
    public void buttonBack() {
        SceneManager.INSTANCE.switchScene(SceneName.MAIN);
    }

    //package private
    void updateGameModeText(final String text) {
        textareaDescription.setText(text);
    }

    private void startMatch() {
        final boolean aiPlayer = checkboxAI.isSelected();
        final Optional<String> username1 = Optional.of(getSelectedItem(choiceboxPlayer1));
        final Optional<String> username2 = Optional.of(getSelectedItem(choiceboxPlayer2));
        if (login.arePlayersValid(username1, username2, aiPlayer)) {
            final MatchManager gm = new MatchManagerImpl(username1.get(), username2.get(), (aiPlayer) ? PlayerType.ARTIFICIAL : PlayerType.HUMAN, selectedGameMode);
            final String winner = gm.startNewMatch();
            dialog.launch(DialogType.INFORMATION, "Match over!", "Player " + winner + " won the match!\nPress ok to go back to menu.", null);
            SceneManager.INSTANCE.switchScene(SceneName.MAIN);
        }
    }

    // GETTERS & SETTERS (package private)
    ChoiceBox<String> getChoiceBoxPlayer1() {
        return choiceboxPlayer1;
    }

    ChoiceBox<String> getChoiceBoxPlayer2() {
        return choiceboxPlayer2;
    }

    ChoiceBox<GameMode> getChoiceBoxGameMode() {
        return choiceboxGameMode;
    }

    GameMode getSelectedGameMode() {
        return selectedGameMode;
    }

    <T> T getSelectedItem(final ChoiceBox<T> cb) {
        return cb.getSelectionModel().getSelectedItem();
    }

    void setSelectedGameMode(final GameMode gm) {
        selectedGameMode = gm;
    }

}
